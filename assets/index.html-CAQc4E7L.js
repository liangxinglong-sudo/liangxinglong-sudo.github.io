import{_ as t,c as o,a as n,o as r}from"./app-CpspcPOW.js";const a="/assets/mq-order-1-vJTco2XS.png",p="/assets/mq-order-2-DS6Wr4P_.png",c={};function s(i,e){return r(),o("div",null,e[0]||(e[0]=[n('<h2 id="如何保证有序" tabindex="-1"><a class="header-anchor" href="#如何保证有序"><span>如何保证有序</span></a></h2><p>要保证顺序消息，首先要，先让生产者<strong>发送的消息是有序</strong>的。再然后，要保证<strong>消费消息是有序</strong>的。</p><p><strong>那么如何保证生产者发送消息有序？</strong></p><p>RocketMQ 中消息发送的 3 种方式：同步、异步、单向。要保证发送消息的顺序，只能保证<strong>同步发送</strong>，且必须是<strong>单个生产者</strong>。</p><p>其次，利用队列的<code>FIFO</code>特性，保证需要顺序消费的消息在同一个队列里，且只有<strong>一个消费者消费</strong>。</p><h2 id="全局有序" tabindex="-1"><a class="header-anchor" href="#全局有序"><span>全局有序</span></a></h2><p>如果要保证消息的全局有序，首先只能由一个生产者往 <code>Topic</code> 发送消息，并且一个 <code>Topic</code> 内部只能有 一个队列（分区）。消费者也必须是单线程消费这个队列。这样的消息就是全局有序的！</p><p>不过一般情况下我们都不需要全局有序，即使是同步 <code>MySQL Binlog</code> 也只需要保证单表消息有序即可。</p><p><img src="'+a+'" alt="全局有序" width="1053" height="209"></p><h2 id="部分有序" tabindex="-1"><a class="header-anchor" href="#部分有序"><span>部分有序</span></a></h2><p>一个生产者也可以，只要同类消息发往指定的队列即可</p><p><img src="'+p+'" alt="部分有序" width="1111" height="387"></p><p>将<code>Topic</code>内部划分为我们需要的队列数，消息通过特定的策略发往固定的队列中，每个队列对应一个单线程处理的消费者，这样完成了部分有序的需求，又可以通过队列数量的并发提高消息处理效率。</p>',13)]))}const g=t(c,[["render",s]]),m=JSON.parse('{"path":"/knowledge/component/mq/mq-order/","title":"如何保证消息有序","lang":"zh-CN","frontmatter":{"title":"如何保证消息有序","icon":"tabler:message-cog","category":["开发工具"],"tag":["tools"],"createTime":"2025/04/10 17:28:06","permalink":"/knowledge/component/mq/mq-order/","description":"如何保证有序 要保证顺序消息，首先要，先让生产者发送的消息是有序的。再然后，要保证消费消息是有序的。 那么如何保证生产者发送消息有序？ RocketMQ 中消息发送的 3 种方式：同步、异步、单向。要保证发送消息的顺序，只能保证同步发送，且必须是单个生产者。 其次，利用队列的FIFO特性，保证需要顺序消费的消息在同一个队列里，且只有一个消费者消费。 全...","head":[["meta",{"property":"og:url","content":"https://liangxinglong-sudo.github.io/knowledge/component/mq/mq-order/"}],["meta",{"property":"og:site_name","content":"coder liang"}],["meta",{"property":"og:title","content":"如何保证消息有序"}],["meta",{"property":"og:description","content":"如何保证有序 要保证顺序消息，首先要，先让生产者发送的消息是有序的。再然后，要保证消费消息是有序的。 那么如何保证生产者发送消息有序？ RocketMQ 中消息发送的 3 种方式：同步、异步、单向。要保证发送消息的顺序，只能保证同步发送，且必须是单个生产者。 其次，利用队列的FIFO特性，保证需要顺序消费的消息在同一个队列里，且只有一个消费者消费。 全..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"tools"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何保证消息有序\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.35,"words":405},"git":{},"autoDesc":true,"filePathRelative":"notes/knowledge/5.component/1.mq/4.mq-order.md"}');export{g as comp,m as data};
